patch:
  schema_list:
    - schema: placeless_flypy
    - schema: easy_en

  switcher/hotkeys:
    - "Control+grave"
    
  menu/page_size: 5   #候选词个数


  ascii_composer/good_old_caps_lock: true     # 若为true，caps只切换大小写
  ascii_composer/switch_key:
    Caps_Lock: noop
    Control_L: noop
    Control_R: noop
    Shift_L: commit_code
    Shift_R: commit_code
  
  punctuator:
    half_shape:
      "#": "#"
      "`": "`"
      "~": "~"
      "@": "@"
      "=": "="
      "/": "/"
      '\': "\\"
      "'": "'"
      "[": "["
      "]": "]"
      "$": "$"
      "%": "%"
      "<": "<"
      ">": ">"
      "*" : "*"
    
  key_binder/bindings: # 设置翻页
    - { when: paging, accept: minus, send: Page_Up }
    - { when: has_menu, accept: equal, send: Page_Down }
    - { when: paging, accept: bracketleft, send: Page_Up }
    - { when: has_menu, accept: bracketright, send: Page_Down }
    - { accept: "Shift+space", select: .next, when: always}
  #   # - { when: composing, accept: Control+k,  send: Escape }
  #   # - { when: paging, accept: bracketleft, send: Page_Up }
  #   # - { when: has_menu, accept: bracketright, send: Page_Down }
  #   # - {accept: "Shift", toggle: ascii_mode, when: always}
    # - {accept: "Control+Shift+k", toggle: ascii_mode, when: always}

    # - { when: composing, accept: ISO_Left_Tab, send: Page_Down }
    # - { when: composing, accept: Shift+Tab, send: Page_Up }
    # - { when: paging, accept: minus, send: Page_Up }
    # - { when: has_menu, accept: equal, send: Page_Down }
    # - { when: paging, accept: bracketleft, send: Page_Up }
    # - { when: has_menu, accept: bracketright, send: Page_Down }
    - {accept: "Control+Shift+1", select: .next, when: always}
    - {accept: "Control+Shift+2", toggle: ascii_punct, when: always}
    - {accept: "Control+Shift+3", toggle: full_shape, when: always}
    - {accept: "Control+Shift+4", toggle: simplification, when: always}
    - {accept: "Control+Shift+5", toggle: extended_charset, when: always}
    - {accept: "Control+Shift+exclam", select: .next, when: always}
    - {accept: "Control+Shift+at", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+numbersign", toggle: full_shape, when: always}
    - {accept: "Control+Shift+dollar", toggle: simplification, when: always}
    - {accept: "Control+Shift+percent", toggle: extended_charset, when: always}
    - {accept: "Control+period", toggle: ascii_punct, when: always}
    #   - { when: paging, accept: comma, send: Page_Up }
    #   - { when: composing, accept: Tab, send: Page_Down }
    # - { when: has_menu, accept: period, send: Page_Down }
    # - {accept: "Control+p", send: Up, when: composing}
    # - {accept: "Control+n", send: Down, when: composing}
    # - {accept: "Control+b", send: Left, when: composing}
    # - {accept: "Control+f", send: Right, when: composing}
    # - {accept: "Control+a", send: Home, when: composing}
    # - {accept: "Control+e", send: End, when: composing}
    # - {accept: "Control+d", send: Delete, when: composing}
    # - {accept: "Control+k", send: "Shift+Delete", when: composing}
    # - {accept: "Control+h", send: BackSpace, when: composing}
    # - {accept: "Control+g", send: Escape, when: composing}
    # - {accept: "Control+bracketleft", send: Escape, when: composing}
    # - { when: has_menu, accept: semicolon, send: 2 }
    # - { when: has_menu, accept: apostrophe, send: 3 }
